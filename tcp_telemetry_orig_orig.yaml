# configuration for a metric measuring bytes sent from a server
# to a client
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: mongosentbytes
  namespace: default
spec:
  value: connection.sent.bytes | 0 # uses a TCP-specific attribute
  dimensions:
    source_service: source.service | "unknown"
    source_version: source.labels["version"] | "unknown"
#    connection_id: connection.id | "unknown"
#    source_port: source.port 
    source_ip: source.ip 
    destination_service: destination.service | "unknown"
    destination_version: destination.labels["version"] | "unknown"
    destination_ip: destination.ip
    protocol: context.protocol | "unknown"
#    destination_port: destination.port
  monitoredResourceType: '"UNSPECIFIED"'
---
# Configuration for a metric measuring bytes sent from a client
# to a server
apiVersion: "config.istio.io/v1alpha2"
kind: metric
metadata:
  name: mongoreceivedbytes
  namespace: default
spec:
  value: connection.received.bytes | 0 # uses a TCP-specific attribute
  dimensions:
    source_service: source.service | "unknown"
    source_version: source.labels["version"] | "unknown"
#    connection_id: connection.id | "unknown"
#    source_port: source.port
    source_ip: source.ip
    destination_service: destination.service | "unknown"
    destination_version: destination.labels["version"] | "unknown"
    destination_ip: destination.ip
    protocol: context.protocol | "unknown"
  monitoredResourceType: '"UNSPECIFIED"'
---
# Configuration for a Prometheus handler
apiVersion: "config.istio.io/v1alpha2"
kind: prometheus
metadata:
  name: mongohandler
  namespace: default
spec:
  metrics:
  - name: mongo_sent_bytes # Prometheus metric name
    instance_name: mongosentbytes.metric.default # Mixer instance name (fully-qualified)
    kind: COUNTER
    label_names:
    - source_service
    - source_version
    - connection_id
#    - source_port
    - source_ip
    - destination_service
    - destination_version
    - destination_ip
    - protocol
 #   - destination_port
  - name: mongo_received_bytes # Prometheus metric name
    instance_name: mongoreceivedbytes.metric.default # Mixer instance name (fully-qualified)
    kind: COUNTER
    label_names:
    - source_service
    - source_version
    - connection_id
#    - source_port
    - source_ip
    - destination_service
    - destination_version
    - destination_ip
    - protocol
---
# Rule to send metric instances to a Prometheus handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: mongoprom
  namespace: default
spec:
#  match: "true" # match for all requests
  match: context.protocol == "tcp"
#         || context.protocol == "http"
#         && destination.service == "mongodb.default.svc.cluster.local"
  actions:
  - handler: mongohandler.prometheus
    instances:
    - mongoreceivedbytes.metric
    - mongosentbytes.metric
