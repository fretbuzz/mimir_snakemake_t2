#!/usr/bin/env python3
### ^^^ not super sure if that is correct... ####

rule plot_quals:
    input:
        "calls/all.vcf"
    output:
        "plots/quals.svg"
    script:
        "scripts/plot-quals.py"

# parse pcap to edgefiles (unprocessed at all)
rule pcaps_to_edges:
    input:
        [???path_to_experiment_folder]/[???filter by .pcap???]]]
    output:
        [???path_to_experiment_folder]/edgefiles/[???names by time and stuff???]
    script:
        "/analysis/pcap_parser.py" [[[????pass parameters somehow????]]]
# note: this'd actually require changing some logic.... snese now this file would be
#"in charge" rather than that one part of pcap_parser...
## NOTE: what is the deal w/ the whole "packet" thing???

# convert edges to processed
rule edes_to_processed_edges:
    input:
        [???path_to_experiment_folder]/edgefiles/[???filter by relevant??]
    output:
        [???path_to_experiment_folder]/processeed_edgefiles/[???names by time and stuff???]
    script:
        [??? TBD ???]

# convert processeed edgefiles to graphs
rule processed_edges_to_graph_metrics:
    input:
        [???path_to_experiment_folder]/processeed_edgefiles/[???relevant stuff???]
    output:
        [????path_to_experiment_folder???]/metrics/[??]
        ## maybe graphs too????
    script:
        [????]

# convert graph metrics to anomaly detection style
    rule anomaly_detection_on_graph_metrics:
        input:
            ??
        output:
            ???
        script:
            ???

# select set of metrics (note: this might involve the whole synthetic data thing)
# process alerts



# NOTE: maybe this is too much???
# okay, it is super clear we need a "all" metrics and then we can heuristically pair that down ATM